apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-android-extensions"
apply plugin: "io.fabric"
apply plugin: "io.gitlab.arturbosch.detekt"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.matthiascorbetticini.androiddependencies"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

}

//ANDROIDX Artifacts - https://developer.android.com/jetpack/androidx/migrate/artifact-mappings
dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.appcompat:appcompat:1.1.0"

    implementation "com.google.android.material:material:1.1.0"

    //CONSTRAINTLAYOUT
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"

    //FRAGMENT
    implementation "androidx.fragment:fragment:1.2.4"

    //RECYCLERVIEW
    implementation "androidx.recyclerview:recyclerview-selection:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"

    def retrofitVersion = "2.7.2"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    implementation "com.jakewharton.timber:timber:4.7.1"

    def okHttpVersion = "4.5.0"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"

    def moshiVersion = "1.9.2"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    implementation "com.squareup.moshi:moshi-adapters:$moshiVersion"

    implementation "com.google.code.gson:gson:2.8.6"

    def daggerVersion = "2.23.2"
    api "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    api "com.google.dagger:dagger-android:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    def koinVersion = "2.1.5"
    // Koin for Android
    implementation "org.koin:koin-android:$koinVersion"
    // or Koin for Lifecycle scoping
    implementation "org.koin:koin-android-scope:$koinVersion"
    // or Koin for Android Architecture ViewModel
    implementation "org.koin:koin-android-viewmodel:$koinVersion"

    //Play Services

    //Google+
    implementation "com.google.android.gms:play-services-plus:17.0.0"
    //Google Account Login
    implementation "com.google.android.gms:play-services-auth:18.0.0"
    //Google Actions, Base Client Library
    implementation "com.google.android.gms:play-services-base:17.2.1"
    //Google Sign In
    implementation "com.google.android.gms:play-services-identity:17.0.0"
    //Google Analytics
    implementation "com.google.android.gms:play-services-analytics:17.0.0"
    //Google Awareness
    implementation "com.google.android.gms:play-services-awareness:18.0.0"
    //Google Cast
    implementation "com.google.android.gms:play-services-cast:18.1.0"
    //Google Cloud Messaging
    implementation "com.google.android.gms:play-services-gcm:17.0.0"
    //Google Drive
    implementation "com.google.android.gms:play-services-drive:17.0.0"
    //Google Fit
    implementation "com.google.android.gms:play-services-fitness:18.0.0"
    //Google Location and Activity Recognition
    implementation "com.google.android.gms:play-services-location:17.0.0"
    //Google Mobile Ads
    implementation "com.google.android.gms:play-services-ads:19.0.1"
    //Mobile Vision
    implementation "com.google.android.gms:play-services-vision:20.0.0"
    //Google Nearby
    implementation "com.google.android.gms:play-services-nearby:17.0.0"
    //Google Panorama Viewer
    implementation "com.google.android.gms:play-services-panorama:17.0.0"
    //Google Play Game services
    implementation "com.google.android.gms:play-services-games:19.0.0"
    //SafetyNet
    implementation "com.google.android.gms:play-services-safetynet:17.0.0"
    //Google Pay
    implementation "com.google.android.gms:play-services-wallet:18.0.0"
    //Wear OS
    implementation "com.google.android.gms:play-services-wearable:17.0.0"

    //COROUTINES
    def coroutinesVersion = "1.3.5"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    //PICASSO
    implementation "com.squareup.picasso:picasso:2.71828"
    
    //GLIDE
    def glideVersion = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    //COIL
    implementation "io.coil-kt:coil:0.9.5"

    //CRASHLYTICS

    // (Recommended) Add the Google Analytics dependency.
    implementation "com.google.firebase:firebase-analytics:17.3.0"

    // Add the Firebase Crashlytics dependency.
    implementation "com.crashlytics.sdk.android:crashlytics:2.10.1"

    //LIFECYCLE

    def lifecycleVersion = "2.2.0"
    def archVersion = "2.1.0"
    
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"

    // Annotation processor
    //kapt "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycleVersion"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycleVersion"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycleVersion"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$archVersion"
    
    //NAVIGATION
    def navVersion = "2.2.1"

    // Kotlin - lose the "-ktx" part for Java
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"

    implementation "androidx.navigation:navigation-runtime-ktx:$navVersion"
    // Dynamic Feature Module Support
    //This requires 2.3.0+ which is currently in alpha
    //implementation "androidx.navigation:navigation-dynamic-features-fragment:$navVersion"

    // Testing Navigation
    //This requires 2.3.0+ which is currently in alpha
    //androidTestImplementation "androidx.navigation:navigation-testing:$navVersion"
    
    //PAGING
    def pagingVersion = "2.1.2"

    implementation "androidx.paging:paging-runtime:$pagingVersion" // For Kotlin use paging-runtime-ktx

    // alternatively - without Android dependencies for testing
    testImplementation "androidx.paging:paging-common:$pagingVersion" // For Kotlin use paging-common-ktx

    // optional - RxJava support
    implementation "androidx.paging:paging-rxjava2:$pagingVersion" // For Kotlin use paging-rxjava2-ktx

    //ROOM

    def room_version = "2.2.5"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    
    //WORKMANAGER

    def workVersion = "2.3.4"

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$workVersion"

    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:$workVersion"

    // optional - GCMNetworkManager support
    implementation "androidx.work:work-gcm:$workVersion"

    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$workVersion"

    //KTX
    implementation "androidx.core:core-ktx:1.2.0"
    implementation "androidx.collection:collection-ktx:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.2.4"

    implementation "androidx.palette:palette-ktx:1.0.0"
    implementation "androidx.sqlite:sqlite-ktx:2.1.0"

    implementation "com.google.android.play:core-ktx:1.7.0"

    //MOCKK
    testImplementation "io.mockk:mockk:1.9.3"

    //MOCKITO
    testImplementation "org.mockito:mockito-core:3.3.3"

    //JUNIT
    testImplementation "junit:junit:4.13"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test:runner:1.2.0"
    androidTestImplementation "androidx.test:rules:1.2.0"

    //ESPRESSO
    def espressoVersion = "3.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    //Multiprocess - https://developer.android.com/training/testing/espresso/multiprocess
    androidTestImplementation "androidx.test.espresso:espresso-remote:$espressoVersion"
    //Intents - https://developer.android.com/training/testing/espresso/intents
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    //Web - https://developer.android.com/training/testing/espresso/web
    androidTestImplementation "androidx.test.espresso:espresso-web:$espressoVersion"
    
}

detekt {
    failFast = true // fail build on any finding
    buildUponDefaultConfig = true // preconfigure defaults
    config = files("$projectDir/config/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
    baseline = file("$projectDir/config/baseline.xml") // a way of suppressing issues before introducing detekt

    reports {
        html.enabled = true // observe findings in your browser with structure and code snippets
        xml.enabled = false // checkstyle like format mainly for integrations like Jenkins
        txt.enabled = false // similar to the console output, contains issue signature to manually edit baseline files
    }
}

apply plugin: "com.google.gms.google-services"
